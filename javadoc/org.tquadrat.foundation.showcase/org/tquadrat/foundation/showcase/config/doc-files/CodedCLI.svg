
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='1824.000'
     height='715.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='293.000'
                  width='1774.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.showcase.config.CodedCLI'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='1774.000'
                          height='293.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='1774.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='863.000'
                          y='13.000'>CodedCLI</text>
                    <line x1='0.000'
                          y1='243.000'
                          x2='1774.000'
                          y2='243.000'
                          class='separator'/>
                    <text y='30.000'>- m_BigDecimalArg:java.math.BigDecimal</text>
                    <text y='41.000'>- m_BigDecimalOpt:java.math.BigDecimal</text>
                    <text y='52.000'>- m_BigIntegerArg:java.math.BigInteger</text>
                    <text y='63.000'>- m_BigIntegerOpt:java.math.BigInteger</text>
                    <text y='74.000'>- m_BooleanPrimitiveArg:boolean</text>
                    <text y='85.000'>- m_BooleanPrimitiveOpt:boolean</text>
                    <text y='96.000'>- m_BooleanArg:java.lang.Boolean</text>
                    <text y='107.000'>- m_BooleanOpt:java.lang.Boolean</text>
                    <text y='118.000'>- m_BytePrimitiveArg:byte</text>
                    <text y='129.000'>- m_BytePrimitiveOpt:byte</text>
                    <text y='140.000'>- m_ByteArg:java.lang.Byte</text>
                    <text y='151.000'>- m_ByteOpt:java.lang.Byte</text>
                    <text y='162.000'>- m_CharArg:char</text>
                    <text y='173.000'>- m_CharOpt:char</text>
                    <text y='184.000'>- m_CharacterArg:java.lang.Character</text>
                    <text y='195.000'>- m_CharacterOpt:java.lang.Character</text>
                    <text y='206.000'>- m_CharsetArg:java.nio.charset.Charset</text>
                    <text y='217.000'>- m_CharsetOpt:java.nio.charset.Charset</text>
                    <text y='228.000'>- m_StringArg:java.lang.String</text>
                    <text y='239.000'>- m_StringOpt:java.lang.String</text>
                    <text x='5.000'
                          y='256.000'>+ CodedCLI()</text>
                    <text x='5.000'
                          y='267.000'>- addDefinition(cliDefinitions:java.util.Collection&lt;? super org.tquadrat.foundation.config.spi.CLIDefinition&gt;,currentIndex:int,propertyClass:java.lang.Class&lt;? extends T&gt;,optSetter:java.util.function.BiConsumer&lt;java.lang.String,T&gt;,argSetter:java.util.function.BiConsumer&lt;java.lang.String,T&gt;):int</text>
                    <text x='5.000'
                          y='278.000'>+ execute(args:java.lang.String&#x2026;):boolean</text>
                    <text x='5.000'
                          y='289.000'
                          class='static'>+ main(args:java.lang.String&#x2026;):void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M912.000,297.000 L912.000,197.000'
          marker-end='url(#inheritance)'/>
    <use x='790.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#org.tquadrat.foundation.showcase.config.CodedCLI'/>
</svg>